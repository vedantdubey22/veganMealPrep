{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubey\\\\OneDrive\\\\Desktop\\\\vegan meal prep\\\\frontend\\\\src\\\\components\\\\GoogleLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLogin = ({\n  onSuccess\n}) => {\n  _s();\n  const [error, setError] = useState(null);\n  const login = useGoogleLogin({\n    onSuccess: async response => {\n      try {\n        setError(null);\n        // Get user info from Google\n        const userInfo = await axios.get('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${response.access_token}`\n          }\n        });\n\n        // Send to our backend\n        const backendResponse = await axios.post('http://localhost:5000/api/auth/google', {\n          email: userInfo.data.email,\n          name: userInfo.data.name,\n          picture: userInfo.data.picture,\n          googleId: userInfo.data.sub\n        });\n\n        // Store the token\n        localStorage.setItem('token', backendResponse.data.token);\n\n        // Call the success callback\n        if (onSuccess) {\n          onSuccess(backendResponse.data);\n        }\n      } catch (error) {\n        console.error('Error during Google login:', error);\n        setError(error.message);\n      }\n    },\n    onError: error => {\n      console.error('Google Login Error:', error);\n      setError('Failed to login with Google');\n    },\n    flow: 'implicit',\n    scope: 'email profile',\n    cookiePolicy: 'single_host_origin'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => login(),\n      className: \"bg-white text-gray-700 px-4 py-2 rounded-md shadow-sm flex items-center space-x-2 hover:bg-gray-50 transition-colors\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"https://www.google.com/favicon.ico\",\n        alt: \"Google\",\n        className: \"w-5 h-5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-500 mt-2 text-sm\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleLogin, \"wlpY64IYgnntIYmUyrYnLPJ6UpI=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = GoogleLogin;\nexport default GoogleLogin;\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin\");","map":{"version":3,"names":["React","useState","useGoogleLogin","axios","jsxDEV","_jsxDEV","GoogleLogin","onSuccess","_s","error","setError","login","response","userInfo","get","headers","Authorization","access_token","backendResponse","post","email","data","name","picture","googleId","sub","localStorage","setItem","token","console","message","onError","flow","scope","cookiePolicy","children","onClick","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dubey/OneDrive/Desktop/vegan meal prep/frontend/src/components/GoogleLogin.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\n\r\nconst GoogleLogin = ({ onSuccess }) => {\r\n  const [error, setError] = useState(null);\r\n\r\n  const login = useGoogleLogin({\r\n    onSuccess: async (response) => {\r\n      try {\r\n        setError(null);\r\n        // Get user info from Google\r\n        const userInfo = await axios.get(\r\n          'https://www.googleapis.com/oauth2/v3/userinfo',\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${response.access_token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        // Send to our backend\r\n        const backendResponse = await axios.post('http://localhost:5000/api/auth/google', {\r\n          email: userInfo.data.email,\r\n          name: userInfo.data.name,\r\n          picture: userInfo.data.picture,\r\n          googleId: userInfo.data.sub,\r\n        });\r\n\r\n        // Store the token\r\n        localStorage.setItem('token', backendResponse.data.token);\r\n        \r\n        // Call the success callback\r\n        if (onSuccess) {\r\n          onSuccess(backendResponse.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during Google login:', error);\r\n        setError(error.message);\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error('Google Login Error:', error);\r\n      setError('Failed to login with Google');\r\n    },\r\n    flow: 'implicit',\r\n    scope: 'email profile',\r\n    cookiePolicy: 'single_host_origin'\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <button\r\n        onClick={() => login()}\r\n        className=\"bg-white text-gray-700 px-4 py-2 rounded-md shadow-sm flex items-center space-x-2 hover:bg-gray-50 transition-colors\"\r\n      >\r\n        <img\r\n          src=\"https://www.google.com/favicon.ico\"\r\n          alt=\"Google\"\r\n          className=\"w-5 h-5\"\r\n        />\r\n        <span>Sign in with Google</span>\r\n      </button>\r\n      {error && (\r\n        <div className=\"text-red-500 mt-2 text-sm\">\r\n          {error}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleLogin; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,KAAK,GAAGT,cAAc,CAAC;IAC3BK,SAAS,EAAE,MAAOK,QAAQ,IAAK;MAC7B,IAAI;QACFF,QAAQ,CAAC,IAAI,CAAC;QACd;QACA,MAAMG,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAC9B,+CAA+C,EAC/C;UACEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUJ,QAAQ,CAACK,YAAY;UAChD;QACF,CACF,CAAC;;QAED;QACA,MAAMC,eAAe,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,uCAAuC,EAAE;UAChFC,KAAK,EAAEP,QAAQ,CAACQ,IAAI,CAACD,KAAK;UAC1BE,IAAI,EAAET,QAAQ,CAACQ,IAAI,CAACC,IAAI;UACxBC,OAAO,EAAEV,QAAQ,CAACQ,IAAI,CAACE,OAAO;UAC9BC,QAAQ,EAAEX,QAAQ,CAACQ,IAAI,CAACI;QAC1B,CAAC,CAAC;;QAEF;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAET,eAAe,CAACG,IAAI,CAACO,KAAK,CAAC;;QAEzD;QACA,IAAIrB,SAAS,EAAE;UACbA,SAAS,CAACW,eAAe,CAACG,IAAI,CAAC;QACjC;MACF,CAAC,CAAC,OAAOZ,KAAK,EAAE;QACdoB,OAAO,CAACpB,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;QAClDC,QAAQ,CAACD,KAAK,CAACqB,OAAO,CAAC;MACzB;IACF,CAAC;IACDC,OAAO,EAAGtB,KAAK,IAAK;MAClBoB,OAAO,CAACpB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CC,QAAQ,CAAC,6BAA6B,CAAC;IACzC,CAAC;IACDsB,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE,eAAe;IACtBC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,oBACE7B,OAAA;IAAA8B,QAAA,gBACE9B,OAAA;MACE+B,OAAO,EAAEA,CAAA,KAAMzB,KAAK,CAAC,CAAE;MACvB0B,SAAS,EAAC,sHAAsH;MAAAF,QAAA,gBAEhI9B,OAAA;QACEiC,GAAG,EAAC,oCAAoC;QACxCC,GAAG,EAAC,QAAQ;QACZF,SAAS,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFtC,OAAA;QAAA8B,QAAA,EAAM;MAAmB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,EACRlC,KAAK,iBACJJ,OAAA;MAAKgC,SAAS,EAAC,2BAA2B;MAAAF,QAAA,EACvC1B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACnC,EAAA,CAlEIF,WAAW;EAAA,QAGDJ,cAAc;AAAA;AAAA0C,EAAA,GAHxBtC,WAAW;AAoEjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}