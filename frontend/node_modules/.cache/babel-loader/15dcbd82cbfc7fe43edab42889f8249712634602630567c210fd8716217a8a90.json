{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for API key\napi.interceptors.request.use(config => {\n  const apiKey = process.env.REACT_APP_SPOONACULAR_API_KEY;\n  if (apiKey) {\n    config.params = {\n      ...config.params,\n      apiKey\n    };\n  }\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => response, error => {\n  if (error.response) {\n    // Server responded with error status\n    console.error('API Error:', error.response.data);\n  } else if (error.request) {\n    // Request made but no response received\n    console.error('Network Error:', error.request);\n  } else {\n    // Error in request setup\n    console.error('Request Error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport const searchFood = async query => {\n  try {\n    const response = await api.get('/api/food/search', {\n      params: {\n        query\n      }\n    });\n    // Extract the results array from the response\n    return response.data.results || [];\n  } catch (error) {\n    console.error('Error searching for food:', error);\n    throw error;\n  }\n};\nexport const getNutritionInfo = async foodId => {\n  try {\n    const response = await api.get(`/api/food/nutrition/${foodId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error getting nutrition info:', error);\n    throw error;\n  }\n};\nexport const saveMeal = async mealData => {\n  try {\n    const response = await api.post('/api/meals', mealData);\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport const getDailyMeals = async date => {\n  try {\n    const response = await api.get('/api/meals/daily', {\n      params: {\n        date\n      }\n    });\n    return response.data;\n  } catch (error) {\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_BASE_URL","headers","interceptors","request","use","config","apiKey","REACT_APP_SPOONACULAR_API_KEY","params","response","error","console","data","message","Promise","reject","searchFood","query","get","results","getNutritionInfo","foodId","saveMeal","mealData","post","getDailyMeals","date"],"sources":["C:/Users/dubey/OneDrive/Desktop/vegan meal prep/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor for API key\r\napi.interceptors.request.use((config) => {\r\n  const apiKey = process.env.REACT_APP_SPOONACULAR_API_KEY;\r\n  if (apiKey) {\r\n    config.params = {\r\n      ...config.params,\r\n      apiKey,\r\n    };\r\n  }\r\n  return config;\r\n});\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    if (error.response) {\r\n      // Server responded with error status\r\n      console.error('API Error:', error.response.data);\r\n    } else if (error.request) {\r\n      // Request made but no response received\r\n      console.error('Network Error:', error.request);\r\n    } else {\r\n      // Error in request setup\r\n      console.error('Request Error:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const searchFood = async (query) => {\r\n  try {\r\n    const response = await api.get('/api/food/search', {\r\n      params: { query },\r\n    });\r\n    // Extract the results array from the response\r\n    return response.data.results || [];\r\n  } catch (error) {\r\n    console.error('Error searching for food:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getNutritionInfo = async (foodId) => {\r\n  try {\r\n    const response = await api.get(`/api/food/nutrition/${foodId}`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error getting nutrition info:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const saveMeal = async (mealData) => {\r\n  try {\r\n    const response = await api.post('/api/meals', mealData);\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getDailyMeals = async (date) => {\r\n  try {\r\n    const response = await api.get('/api/meals/daily', {\r\n      params: { date },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;EACtEC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,MAAM,GAAGR,OAAO,CAACC,GAAG,CAACQ,6BAA6B;EACxD,IAAID,MAAM,EAAE;IACVD,MAAM,CAACG,MAAM,GAAG;MACd,GAAGH,MAAM,CAACG,MAAM;MAChBF;IACF,CAAC;EACH;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACAV,GAAG,CAACO,YAAY,CAACO,QAAQ,CAACL,GAAG,CAC1BK,QAAQ,IAAKA,QAAQ,EACrBC,KAAK,IAAK;EACT,IAAIA,KAAK,CAACD,QAAQ,EAAE;IAClB;IACAE,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAACD,QAAQ,CAACG,IAAI,CAAC;EAClD,CAAC,MAAM,IAAIF,KAAK,CAACP,OAAO,EAAE;IACxB;IACAQ,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACP,OAAO,CAAC;EAChD,CAAC,MAAM;IACL;IACAQ,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACG,OAAO,CAAC;EAChD;EACA,OAAOC,OAAO,CAACC,MAAM,CAACL,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,OAAO,MAAMM,UAAU,GAAG,MAAOC,KAAK,IAAK;EACzC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMd,GAAG,CAACuB,GAAG,CAAC,kBAAkB,EAAE;MACjDV,MAAM,EAAE;QAAES;MAAM;IAClB,CAAC,CAAC;IACF;IACA,OAAOR,QAAQ,CAACG,IAAI,CAACO,OAAO,IAAI,EAAE;EACpC,CAAC,CAAC,OAAOT,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAG,MAAOC,MAAM,IAAK;EAChD,IAAI;IACF,MAAMZ,QAAQ,GAAG,MAAMd,GAAG,CAACuB,GAAG,CAAC,uBAAuBG,MAAM,EAAE,CAAC;IAC/D,OAAOZ,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMY,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EAC1C,IAAI;IACF,MAAMd,QAAQ,GAAG,MAAMd,GAAG,CAAC6B,IAAI,CAAC,YAAY,EAAED,QAAQ,CAAC;IACvD,OAAOd,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMe,aAAa,GAAG,MAAOC,IAAI,IAAK;EAC3C,IAAI;IACF,MAAMjB,QAAQ,GAAG,MAAMd,GAAG,CAACuB,GAAG,CAAC,kBAAkB,EAAE;MACjDV,MAAM,EAAE;QAAEkB;MAAK;IACjB,CAAC,CAAC;IACF,OAAOjB,QAAQ,CAACG,IAAI;EACtB,CAAC,CAAC,OAAOF,KAAK,EAAE;IACd,MAAMA,KAAK;EACb;AACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}