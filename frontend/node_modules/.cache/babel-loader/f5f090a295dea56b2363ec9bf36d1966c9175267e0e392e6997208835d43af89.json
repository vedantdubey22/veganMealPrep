{"ast":null,"code":"export const getChatResponse = async messages => {\n  try {\n    const latestMessage = messages[messages.length - 1];\n    const fullPrompt = `${SYSTEM_PROMPT}\\n\\nUser: ${latestMessage.text}`;\n    const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${config.GEMINI_API_KEY}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        contents: [{\n          parts: [{\n            text: fullPrompt\n          }]\n        }]\n      })\n    });\n    if (!response.ok) {\n      var _error$error;\n      const error = await response.json();\n      console.error('API Error Response:', error);\n      throw new Error(((_error$error = error.error) === null || _error$error === void 0 ? void 0 : _error$error.message) || 'Failed to get response from AI');\n    }\n    const data = await response.json();\n    console.log('API Response:', data);\n    if (data.candidates && data.candidates[0] && data.candidates[0].content) {\n      return data.candidates[0].content.parts[0].text;\n    } else {\n      throw new Error('Unexpected API response format');\n    }\n  } catch (error) {\n    console.error('Chat API Error:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["getChatResponse","messages","latestMessage","length","fullPrompt","SYSTEM_PROMPT","text","response","fetch","config","GEMINI_API_KEY","method","headers","body","JSON","stringify","contents","parts","ok","_error$error","error","json","console","Error","message","data","log","candidates","content"],"sources":["C:/Users/dubey/OneDrive/Desktop/vegan meal prep/frontend/src/utils/chatService.js"],"sourcesContent":["export const getChatResponse = async (messages) => {\r\n    try {\r\n        const latestMessage = messages[messages.length - 1];\r\n        const fullPrompt = `${SYSTEM_PROMPT}\\n\\nUser: ${latestMessage.text}`;\r\n\r\n        const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${config.GEMINI_API_KEY}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                contents: [{\r\n                    parts: [{\r\n                        text: fullPrompt\r\n                    }]\r\n                }]\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const error = await response.json();\r\n            console.error('API Error Response:', error);\r\n            throw new Error(error.error?.message || 'Failed to get response from AI');\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log('API Response:', data);\r\n\r\n        if (data.candidates && data.candidates[0] && data.candidates[0].content) {\r\n            return data.candidates[0].content.parts[0].text;\r\n        } else {\r\n            throw new Error('Unexpected API response format');\r\n        }\r\n    } catch (error) {\r\n        console.error('Chat API Error:', error);\r\n        throw error;\r\n    }\r\n};\r\n"],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,MAAOC,QAAQ,IAAK;EAC/C,IAAI;IACA,MAAMC,aAAa,GAAGD,QAAQ,CAACA,QAAQ,CAACE,MAAM,GAAG,CAAC,CAAC;IACnD,MAAMC,UAAU,GAAG,GAAGC,aAAa,aAAaH,aAAa,CAACI,IAAI,EAAE;IAEpE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0FAA0FC,MAAM,CAACC,cAAc,EAAE,EAAE;MAC5IC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAE,CAAC;UACPC,KAAK,EAAE,CAAC;YACJX,IAAI,EAAEF;UACV,CAAC;QACL,CAAC;MACL,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,CAACG,QAAQ,CAACW,EAAE,EAAE;MAAA,IAAAC,YAAA;MACd,MAAMC,KAAK,GAAG,MAAMb,QAAQ,CAACc,IAAI,CAAC,CAAC;MACnCC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAM,IAAIG,KAAK,CAAC,EAAAJ,YAAA,GAAAC,KAAK,CAACA,KAAK,cAAAD,YAAA,uBAAXA,YAAA,CAAaK,OAAO,KAAI,gCAAgC,CAAC;IAC7E;IAEA,MAAMC,IAAI,GAAG,MAAMlB,QAAQ,CAACc,IAAI,CAAC,CAAC;IAClCC,OAAO,CAACI,GAAG,CAAC,eAAe,EAAED,IAAI,CAAC;IAElC,IAAIA,IAAI,CAACE,UAAU,IAAIF,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC,IAAIF,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,EAAE;MACrE,OAAOH,IAAI,CAACE,UAAU,CAAC,CAAC,CAAC,CAACC,OAAO,CAACX,KAAK,CAAC,CAAC,CAAC,CAACX,IAAI;IACnD,CAAC,MAAM;MACH,MAAM,IAAIiB,KAAK,CAAC,gCAAgC,CAAC;IACrD;EACJ,CAAC,CAAC,OAAOH,KAAK,EAAE;IACZE,OAAO,CAACF,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvC,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}