{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubey\\\\OneDrive\\\\Desktop\\\\vegan meal prep\\\\frontend\\\\src\\\\components\\\\FoodSearch.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNutrition } from '../context/NutritionContext';\nimport { searchFood, getNutritionInfo } from '../utils/api';\nimport RequirementsPanel from './RequirementsPanel';\nimport ChatBot from './ChatBot';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FoodSearch = () => {\n  _s();\n  var _selectedFood$nutriti, _selectedFood$nutriti2, _selectedFood$nutriti3, _selectedFood$nutriti4;\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [selectedFood, setSelectedFood] = useState(null);\n  const [portionSize, setPortionSize] = useState(100); // Default to 100g\n  const [tempPortionSize, setTempPortionSize] = useState('100'); // For handling input state\n  const {\n    selectedFoods,\n    addFood,\n    removeFood,\n    userRequirements\n  } = useNutrition();\n\n  // Reset tempPortionSize when selectedFood changes\n  useEffect(() => {\n    if (selectedFood) {\n      setTempPortionSize(portionSize.toString());\n    }\n  }, [selectedFood, portionSize]);\n\n  // Handle portion size changes\n  const handlePortionChange = e => {\n    const value = e.target.value;\n    setTempPortionSize(value); // Allow any input while typing\n\n    // Only update the actual portion size if the value is valid\n    const numValue = parseInt(value);\n    if (!isNaN(numValue) && numValue >= 0 && numValue <= 1000) {\n      setPortionSize(numValue);\n    }\n  };\n\n  // Validate on blur\n  const handlePortionBlur = () => {\n    if (tempPortionSize === '' || parseInt(tempPortionSize) === 0) {\n      setTempPortionSize('1');\n      setPortionSize(1);\n    } else {\n      const numValue = Math.min(1000, Math.max(1, parseInt(tempPortionSize) || 1));\n      setTempPortionSize(numValue.toString());\n      setPortionSize(numValue);\n    }\n  };\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!searchTerm.trim()) return;\n    setLoading(true);\n    setError(null);\n    setSelectedFood(null);\n    try {\n      const results = await searchFood(searchTerm);\n      // Filter out any non-vegan items that might slip through\n      const nonVeganKeywords = [\n      // Meats\n      'chicken', 'beef', 'pork', 'fish', 'meat', 'lamb', 'mutton', 'veal', 'turkey', 'duck', 'bacon', 'ham', 'sausage', 'seafood', 'shrimp', 'prawn', 'crab', 'lobster', 'shellfish', 'tuna', 'salmon', 'cod', 'halibut', 'tilapia', 'anchovy', 'sardine',\n      // Dairy\n      'egg', 'dairy', 'milk', 'cheese', 'yogurt', 'cream', 'butter', 'whey', 'casein', 'lactose', 'ghee', 'custard', 'ice cream', 'gelato',\n      // Other Animal Products\n      'honey', 'gelatin', 'lard', 'tallow', 'bone', 'stock', 'broth'];\n      const veganResults = results.filter(food => {\n        const foodNameLower = food.name.toLowerCase();\n        // Check if the food name contains any non-vegan keywords\n        const containsNonVegan = nonVeganKeywords.some(keyword => foodNameLower.includes(keyword.toLowerCase()));\n\n        // Additional check for compound words (e.g., \"lamb chop\", \"beef stew\")\n        const containsCompoundNonVegan = nonVeganKeywords.some(keyword => foodNameLower.split(' ').some(word => word === keyword.toLowerCase()));\n        return !containsNonVegan && !containsCompoundNonVegan;\n      });\n      if (veganResults.length === 0 && results.length > 0) {\n        setError('No vegan options found for your search. Please try a different term.');\n      }\n      setSearchResults(veganResults);\n    } catch (err) {\n      console.error('Search error:', err);\n      setError(err.userMessage || 'Failed to search foods. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleFoodSelect = async food => {\n    try {\n      setLoading(true);\n      setError(null);\n      const nutritionInfo = await getNutritionInfo(food.id);\n\n      // Extract nutrition values from the nutrients array\n      const nutrition = {\n        calories: nutritionInfo.calories || 0,\n        protein: nutritionInfo.protein || 0,\n        carbs: nutritionInfo.carbs || 0,\n        fat: nutritionInfo.fat || 0\n      };\n      setSelectedFood({\n        ...food,\n        nutrition\n      });\n    } catch (err) {\n      console.error('Error getting nutrition:', err);\n      setError(err.userMessage || 'Failed to get nutrition info. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleAddFood = async food => {\n    try {\n      const nutritionInfo = await getNutritionInfo(food.id);\n\n      // Extract nutrition values from the nutrients array\n      const nutrition = {\n        calories: nutritionInfo.calories || 0,\n        protein: nutritionInfo.protein || 0,\n        carbs: nutritionInfo.carbs || 0,\n        fat: nutritionInfo.fat || 0\n      };\n\n      // Calculate total calories consumed so far\n      const totalCaloriesConsumed = selectedFoods.reduce((total, food) => {\n        var _food$nutrition;\n        return total + (((_food$nutrition = food.nutrition) === null || _food$nutrition === void 0 ? void 0 : _food$nutrition.calories) || 0);\n      }, 0);\n\n      // Check if adding this food would make remaining calories negative\n      const remainingCaloriesAfterAdd = userRequirements.dailyCalories - (totalCaloriesConsumed + nutrition.calories);\n      if (remainingCaloriesAfterAdd < 0) {\n        setError(`Adding this food would exceed your daily calorie target by ${Math.abs(Math.round(remainingCaloriesAfterAdd))} calories. Please choose a smaller portion or a different food.`);\n        return;\n      }\n      addFood({\n        ...food,\n        nutrition\n      });\n      setSelectedFood(null);\n    } catch (err) {\n      console.error('Error adding food:', err);\n      setError(err.userMessage || 'Failed to add food. Please try again.');\n    }\n  };\n  console.log('FoodSearch component rendered. selectedFoods:', selectedFoods);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-6xl mx-auto p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 bg-red-200 text-red-900 font-bold rounded\",\n      children: \"DEBUG: FoodSearch is rendering!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:col-span-1\",\n        children: /*#__PURE__*/_jsxDEV(RequirementsPanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:col-span-2\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white rounded-lg shadow-md p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-2xl font-bold text-green-800 mb-6\",\n            children: \"Search Vegan Foods\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSearch,\n            className: \"mb-6\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: searchTerm,\n                onChange: e => setSearchTerm(e.target.value),\n                placeholder: \"Search for vegan foods...\",\n                className: \"flex-1 p-2 border border-gray-300 rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: loading,\n                className: \"bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700 transition-colors disabled:bg-green-400\",\n                children: loading ? 'Searching...' : 'Search'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addFood({\n              id: Date.now(),\n              name: 'Test Food',\n              nutrition: {\n                calories: 100,\n                protein: 5,\n                carbs: 10,\n                fat: 2\n              },\n              portionSize: 100\n            }),\n            className: \"mb-4 bg-yellow-400 text-black px-4 py-2 rounded hover:bg-yellow-500\",\n            children: \"Add Test Food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 13\n          }, this), selectedFoods.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-bold text-green-800 mb-2\",\n              children: \"Your Daily Foods\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-2\",\n              children: selectedFoods.map(food => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center justify-between p-3 border border-gray-200 rounded-md bg-green-50\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    className: \"font-medium\",\n                    children: [food.name, \" (\", food.portionSize || 100, \"g)\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 25\n                  }, this), food.nutrition && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-600\",\n                    children: [Math.round(food.nutrition.calories), \" cal | P: \", Math.round(food.nutrition.protein), \"g | C: \", Math.round(food.nutrition.carbs), \"g | F: \", Math.round(food.nutrition.fat), \"g\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => removeFood(food.id),\n                  className: \"text-red-600 hover:text-red-800\",\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 23\n                }, this)]\n              }, food.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8 text-gray-500\",\n            children: \"No foods added yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-4 bg-red-100 text-red-700 rounded-md\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), selectedFood && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-6 p-6 bg-green-50 rounded-lg\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-between items-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-xl font-semibold text-green-800\",\n                children: selectedFood.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setSelectedFood(null),\n                className: \"text-green-600 hover:text-green-800\",\n                children: \"Back to results\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"block text-sm font-medium text-gray-700 mb-2\",\n                children: \"Portion Size (grams)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                min: \"0\",\n                max: \"1000\",\n                value: tempPortionSize,\n                onChange: handlePortionChange,\n                onBlur: handlePortionBlur,\n                className: \"w-full p-2 border border-gray-300 rounded-md\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-3 gap-4 mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 bg-white rounded-lg text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-bold text-green-800\",\n                  children: [Math.round((((_selectedFood$nutriti = selectedFood.nutrition) === null || _selectedFood$nutriti === void 0 ? void 0 : _selectedFood$nutriti.protein) || 0) * (portionSize / 100)), \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Protein\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 bg-white rounded-lg text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-bold text-green-800\",\n                  children: [Math.round((((_selectedFood$nutriti2 = selectedFood.nutrition) === null || _selectedFood$nutriti2 === void 0 ? void 0 : _selectedFood$nutriti2.carbs) || 0) * (portionSize / 100)), \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Carbs\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"p-4 bg-white rounded-lg text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-2xl font-bold text-green-800\",\n                  children: [Math.round((((_selectedFood$nutriti3 = selectedFood.nutrition) === null || _selectedFood$nutriti3 === void 0 ? void 0 : _selectedFood$nutriti3.fat) || 0) * (portionSize / 100)), \"g\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Fat\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center mb-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-lg font-semibold text-green-800\",\n                children: [Math.round((((_selectedFood$nutriti4 = selectedFood.nutrition) === null || _selectedFood$nutriti4 === void 0 ? void 0 : _selectedFood$nutriti4.calories) || 0) * (portionSize / 100)), \" calories\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm text-gray-600\",\n                children: [\"for \", portionSize, \"g serving\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                var _selectedFood$nutriti5, _selectedFood$nutriti6, _selectedFood$nutriti7, _selectedFood$nutriti8;\n                const adjustedNutrition = {\n                  calories: (((_selectedFood$nutriti5 = selectedFood.nutrition) === null || _selectedFood$nutriti5 === void 0 ? void 0 : _selectedFood$nutriti5.calories) || 0) * (portionSize / 100),\n                  protein: (((_selectedFood$nutriti6 = selectedFood.nutrition) === null || _selectedFood$nutriti6 === void 0 ? void 0 : _selectedFood$nutriti6.protein) || 0) * (portionSize / 100),\n                  carbs: (((_selectedFood$nutriti7 = selectedFood.nutrition) === null || _selectedFood$nutriti7 === void 0 ? void 0 : _selectedFood$nutriti7.carbs) || 0) * (portionSize / 100),\n                  fat: (((_selectedFood$nutriti8 = selectedFood.nutrition) === null || _selectedFood$nutriti8 === void 0 ? void 0 : _selectedFood$nutriti8.fat) || 0) * (portionSize / 100)\n                };\n                handleAddFood({\n                  ...selectedFood,\n                  nutrition: adjustedNutrition,\n                  portionSize\n                });\n              },\n              className: \"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\",\n              children: \"Add to Daily Foods\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 15\n          }, this), !selectedFood && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-4\",\n            children: searchResults.map(food => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between p-4 border border-gray-200 rounded-md hover:bg-gray-50 cursor-pointer\",\n              onClick: () => handleFoodSelect(food),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"font-medium\",\n                  children: food.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm text-gray-600\",\n                  children: \"Click to view nutrition details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this)\n            }, food.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n};\n_s(FoodSearch, \"277P5XVmBO8/t1V65ACmc4NGrfI=\", false, function () {\n  return [useNutrition];\n});\n_c = FoodSearch;\nexport default FoodSearch;\nvar _c;\n$RefreshReg$(_c, \"FoodSearch\");","map":{"version":3,"names":["React","useState","useEffect","useNutrition","searchFood","getNutritionInfo","RequirementsPanel","ChatBot","jsxDEV","_jsxDEV","FoodSearch","_s","_selectedFood$nutriti","_selectedFood$nutriti2","_selectedFood$nutriti3","_selectedFood$nutriti4","searchTerm","setSearchTerm","searchResults","setSearchResults","loading","setLoading","error","setError","selectedFood","setSelectedFood","portionSize","setPortionSize","tempPortionSize","setTempPortionSize","selectedFoods","addFood","removeFood","userRequirements","toString","handlePortionChange","e","value","target","numValue","parseInt","isNaN","handlePortionBlur","Math","min","max","handleSearch","preventDefault","trim","results","nonVeganKeywords","veganResults","filter","food","foodNameLower","name","toLowerCase","containsNonVegan","some","keyword","includes","containsCompoundNonVegan","split","word","length","err","console","userMessage","handleFoodSelect","nutritionInfo","id","nutrition","calories","protein","carbs","fat","handleAddFood","totalCaloriesConsumed","reduce","total","_food$nutrition","remainingCaloriesAfterAdd","dailyCalories","abs","round","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","disabled","onClick","Date","now","map","onBlur","_selectedFood$nutriti5","_selectedFood$nutriti6","_selectedFood$nutriti7","_selectedFood$nutriti8","adjustedNutrition","_c","$RefreshReg$"],"sources":["C:/Users/dubey/OneDrive/Desktop/vegan meal prep/frontend/src/components/FoodSearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNutrition } from '../context/NutritionContext';\r\nimport { searchFood, getNutritionInfo } from '../utils/api';\r\nimport RequirementsPanel from './RequirementsPanel';\r\nimport ChatBot from './ChatBot';\r\n\r\nconst FoodSearch = () => {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [selectedFood, setSelectedFood] = useState(null);\r\n  const [portionSize, setPortionSize] = useState(100); // Default to 100g\r\n  const [tempPortionSize, setTempPortionSize] = useState('100'); // For handling input state\r\n  const { selectedFoods, addFood, removeFood, userRequirements } = useNutrition();\r\n\r\n  // Reset tempPortionSize when selectedFood changes\r\n  useEffect(() => {\r\n    if (selectedFood) {\r\n      setTempPortionSize(portionSize.toString());\r\n    }\r\n  }, [selectedFood, portionSize]);\r\n\r\n  // Handle portion size changes\r\n  const handlePortionChange = (e) => {\r\n    const value = e.target.value;\r\n    setTempPortionSize(value); // Allow any input while typing\r\n    \r\n    // Only update the actual portion size if the value is valid\r\n    const numValue = parseInt(value);\r\n    if (!isNaN(numValue) && numValue >= 0 && numValue <= 1000) {\r\n      setPortionSize(numValue);\r\n    }\r\n  };\r\n\r\n  // Validate on blur\r\n  const handlePortionBlur = () => {\r\n    if (tempPortionSize === '' || parseInt(tempPortionSize) === 0) {\r\n      setTempPortionSize('1');\r\n      setPortionSize(1);\r\n    } else {\r\n      const numValue = Math.min(1000, Math.max(1, parseInt(tempPortionSize) || 1));\r\n      setTempPortionSize(numValue.toString());\r\n      setPortionSize(numValue);\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (e) => {\r\n    e.preventDefault();\r\n    if (!searchTerm.trim()) return;\r\n\r\n    setLoading(true);\r\n    setError(null);\r\n    setSelectedFood(null);\r\n\r\n    try {\r\n      const results = await searchFood(searchTerm);\r\n      // Filter out any non-vegan items that might slip through\r\n      const nonVeganKeywords = [\r\n        // Meats\r\n        'chicken', 'beef', 'pork', 'fish', 'meat', 'lamb', 'mutton', 'veal', 'turkey', 'duck',\r\n        'bacon', 'ham', 'sausage', 'seafood', 'shrimp', 'prawn', 'crab', 'lobster', 'shellfish',\r\n        'tuna', 'salmon', 'cod', 'halibut', 'tilapia', 'anchovy', 'sardine',\r\n        // Dairy\r\n        'egg', 'dairy', 'milk', 'cheese', 'yogurt', 'cream', 'butter', 'whey', 'casein',\r\n        'lactose', 'ghee', 'custard', 'ice cream', 'gelato',\r\n        // Other Animal Products\r\n        'honey', 'gelatin', 'lard', 'tallow', 'bone', 'stock', 'broth'\r\n      ];\r\n\r\n      const veganResults = results.filter(food => {\r\n        const foodNameLower = food.name.toLowerCase();\r\n        // Check if the food name contains any non-vegan keywords\r\n        const containsNonVegan = nonVeganKeywords.some(keyword => \r\n          foodNameLower.includes(keyword.toLowerCase())\r\n        );\r\n        \r\n        // Additional check for compound words (e.g., \"lamb chop\", \"beef stew\")\r\n        const containsCompoundNonVegan = nonVeganKeywords.some(keyword =>\r\n          foodNameLower.split(' ').some(word => word === keyword.toLowerCase())\r\n        );\r\n\r\n        return !containsNonVegan && !containsCompoundNonVegan;\r\n      });\r\n      \r\n      if (veganResults.length === 0 && results.length > 0) {\r\n        setError('No vegan options found for your search. Please try a different term.');\r\n      }\r\n      setSearchResults(veganResults);\r\n    } catch (err) {\r\n      console.error('Search error:', err);\r\n      setError(err.userMessage || 'Failed to search foods. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleFoodSelect = async (food) => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const nutritionInfo = await getNutritionInfo(food.id);\r\n      \r\n      // Extract nutrition values from the nutrients array\r\n      const nutrition = {\r\n        calories: nutritionInfo.calories || 0,\r\n        protein: nutritionInfo.protein || 0,\r\n        carbs: nutritionInfo.carbs || 0,\r\n        fat: nutritionInfo.fat || 0\r\n      };\r\n\r\n      setSelectedFood({\r\n        ...food,\r\n        nutrition\r\n      });\r\n    } catch (err) {\r\n      console.error('Error getting nutrition:', err);\r\n      setError(err.userMessage || 'Failed to get nutrition info. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleAddFood = async (food) => {\r\n    try {\r\n      const nutritionInfo = await getNutritionInfo(food.id);\r\n      \r\n      // Extract nutrition values from the nutrients array\r\n      const nutrition = {\r\n        calories: nutritionInfo.calories || 0,\r\n        protein: nutritionInfo.protein || 0,\r\n        carbs: nutritionInfo.carbs || 0,\r\n        fat: nutritionInfo.fat || 0\r\n      };\r\n\r\n      // Calculate total calories consumed so far\r\n      const totalCaloriesConsumed = selectedFoods.reduce((total, food) => \r\n        total + (food.nutrition?.calories || 0), 0);\r\n\r\n      // Check if adding this food would make remaining calories negative\r\n      const remainingCaloriesAfterAdd = userRequirements.dailyCalories - (totalCaloriesConsumed + nutrition.calories);\r\n      if (remainingCaloriesAfterAdd < 0) {\r\n        setError(`Adding this food would exceed your daily calorie target by ${Math.abs(Math.round(remainingCaloriesAfterAdd))} calories. Please choose a smaller portion or a different food.`);\r\n        return;\r\n      }\r\n\r\n      addFood({ ...food, nutrition });\r\n      setSelectedFood(null);\r\n    } catch (err) {\r\n      console.error('Error adding food:', err);\r\n      setError(err.userMessage || 'Failed to add food. Please try again.');\r\n    }\r\n  };\r\n\r\n  console.log('FoodSearch component rendered. selectedFoods:', selectedFoods);\r\n\r\n  return (\r\n    <div className=\"max-w-6xl mx-auto p-6\">\r\n      {/* DEBUG: If you see this, FoodSearch is rendering! */}\r\n      <div className=\"mb-4 p-4 bg-red-200 text-red-900 font-bold rounded\">DEBUG: FoodSearch is rendering!</div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n        {/* Requirements Panel */}\r\n        <div className=\"md:col-span-1\">\r\n          <RequirementsPanel />\r\n        </div>\r\n\r\n        {/* Search and Results */}\r\n        <div className=\"md:col-span-2\">\r\n          <div className=\"bg-white rounded-lg shadow-md p-6\">\r\n            <h2 className=\"text-2xl font-bold text-green-800 mb-6\">Search Vegan Foods</h2>\r\n            \r\n            <form onSubmit={handleSearch} className=\"mb-6\">\r\n              <div className=\"flex gap-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  placeholder=\"Search for vegan foods...\"\r\n                  className=\"flex-1 p-2 border border-gray-300 rounded-md\"\r\n                />\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={loading}\r\n                  className=\"bg-green-600 text-white px-6 py-2 rounded-md hover:bg-green-700 transition-colors disabled:bg-green-400\"\r\n                >\r\n                  {loading ? 'Searching...' : 'Search'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n\r\n            {/* Debug: Add Test Food Button */}\r\n            <button\r\n              onClick={() => addFood({ id: Date.now(), name: 'Test Food', nutrition: { calories: 100, protein: 5, carbs: 10, fat: 2 }, portionSize: 100 })}\r\n              className=\"mb-4 bg-yellow-400 text-black px-4 py-2 rounded hover:bg-yellow-500\"\r\n            >\r\n              Add Test Food\r\n            </button>\r\n\r\n            {/* Selected Foods (always visible below search bar) */}\r\n            {selectedFoods.length > 0 ? (\r\n              <div className=\"mb-8\">\r\n                <h3 className=\"text-lg font-bold text-green-800 mb-2\">Your Daily Foods</h3>\r\n                <div className=\"space-y-2\">\r\n                  {selectedFoods.map((food) => (\r\n                    <div\r\n                      key={food.id}\r\n                      className=\"flex items-center justify-between p-3 border border-gray-200 rounded-md bg-green-50\"\r\n                    >\r\n                      <div>\r\n                        <h3 className=\"font-medium\">{food.name} ({food.portionSize || 100}g)</h3>\r\n                        {food.nutrition && (\r\n                          <p className=\"text-sm text-gray-600\">\r\n                            {Math.round(food.nutrition.calories)} cal | \r\n                            P: {Math.round(food.nutrition.protein)}g | \r\n                            C: {Math.round(food.nutrition.carbs)}g | \r\n                            F: {Math.round(food.nutrition.fat)}g\r\n                          </p>\r\n                        )}\r\n                      </div>\r\n                      <button\r\n                        onClick={() => removeFood(food.id)}\r\n                        className=\"text-red-600 hover:text-red-800\"\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              <div className=\"mb-8 text-gray-500\">No foods added yet.</div>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"mb-6 p-4 bg-red-100 text-red-700 rounded-md\">\r\n                {error}\r\n              </div>\r\n            )}\r\n\r\n            {/* Selected Food Details */}\r\n            {selectedFood && (\r\n              <div className=\"mb-6 p-6 bg-green-50 rounded-lg\">\r\n                <div className=\"flex justify-between items-center mb-4\">\r\n                  <h3 className=\"text-xl font-semibold text-green-800\">{selectedFood.name}</h3>\r\n                  <button\r\n                    onClick={() => setSelectedFood(null)}\r\n                    className=\"text-green-600 hover:text-green-800\"\r\n                  >\r\n                    Back to results\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Portion size input */}\r\n                <div className=\"mb-4\">\r\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n                    Portion Size (grams)\r\n                  </label>\r\n                  <input\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                    max=\"1000\"\r\n                    value={tempPortionSize}\r\n                    onChange={handlePortionChange}\r\n                    onBlur={handlePortionBlur}\r\n                    className=\"w-full p-2 border border-gray-300 rounded-md\"\r\n                  />\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-3 gap-4 mb-4\">\r\n                  <div className=\"p-4 bg-white rounded-lg text-center\">\r\n                    <div className=\"text-2xl font-bold text-green-800\">\r\n                      {Math.round((selectedFood.nutrition?.protein || 0) * (portionSize / 100))}g\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Protein</div>\r\n                  </div>\r\n                  <div className=\"p-4 bg-white rounded-lg text-center\">\r\n                    <div className=\"text-2xl font-bold text-green-800\">\r\n                      {Math.round((selectedFood.nutrition?.carbs || 0) * (portionSize / 100))}g\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Carbs</div>\r\n                  </div>\r\n                  <div className=\"p-4 bg-white rounded-lg text-center\">\r\n                    <div className=\"text-2xl font-bold text-green-800\">\r\n                      {Math.round((selectedFood.nutrition?.fat || 0) * (portionSize / 100))}g\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600\">Fat</div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"text-center mb-4\">\r\n                  <div className=\"text-lg font-semibold text-green-800\">\r\n                    {Math.round((selectedFood.nutrition?.calories || 0) * (portionSize / 100))} calories\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600\">\r\n                    for {portionSize}g serving\r\n                  </div>\r\n                </div>\r\n\r\n                <button\r\n                  onClick={() => {\r\n                    const adjustedNutrition = {\r\n                      calories: (selectedFood.nutrition?.calories || 0) * (portionSize / 100),\r\n                      protein: (selectedFood.nutrition?.protein || 0) * (portionSize / 100),\r\n                      carbs: (selectedFood.nutrition?.carbs || 0) * (portionSize / 100),\r\n                      fat: (selectedFood.nutrition?.fat || 0) * (portionSize / 100)\r\n                    };\r\n                    handleAddFood({ ...selectedFood, nutrition: adjustedNutrition, portionSize });\r\n                  }}\r\n                  className=\"w-full bg-blue-600 text-white py-2 px-4 rounded-md hover:bg-blue-700 transition-colors\"\r\n                >\r\n                  Add to Daily Foods\r\n                </button>\r\n              </div>\r\n            )}\r\n\r\n            {/* Search Results */}\r\n            {!selectedFood && (\r\n              <div className=\"space-y-4\">\r\n                {searchResults.map((food) => (\r\n                  <div\r\n                    key={food.id}\r\n                    className=\"flex items-center justify-between p-4 border border-gray-200 rounded-md hover:bg-gray-50 cursor-pointer\"\r\n                    onClick={() => handleFoodSelect(food)}\r\n                  >\r\n                    <div>\r\n                      <h3 className=\"font-medium\">{food.name}</h3>\r\n                      <p className=\"text-sm text-gray-600\">Click to view nutrition details</p>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      {/* ChatBot */}\r\n      <ChatBot />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FoodSearch; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}