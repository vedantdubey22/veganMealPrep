{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8081/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor for logging\napi.interceptors.request.use(config => {\n  console.log('Making request:', {\n    url: config.url,\n    method: config.method,\n    params: config.params,\n    headers: config.headers\n  });\n  return config;\n});\n\n// Add response interceptor for error handling\napi.interceptors.response.use(response => {\n  console.log('Received response:', {\n    status: response.status,\n    data: response.data\n  });\n  return response;\n}, error => {\n  if (error.response) {\n    // Server responded with error status\n    console.error('API Error Response:', {\n      status: error.response.status,\n      statusText: error.response.statusText,\n      data: error.response.data,\n      headers: error.response.headers\n    });\n  } else if (error.request) {\n    // Request made but no response received\n    console.error('Network Error - No response received:', error.request);\n  } else {\n    // Error in request setup\n    console.error('Request Setup Error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport const searchFood = async query => {\n  try {\n    console.log('Searching for food with query:', query);\n    const response = await api.get('/food/search', {\n      params: {\n        query\n      }\n    });\n    console.log('Search response:', response.data);\n    return response.data || [];\n  } catch (error) {\n    console.error('Error in searchFood:', error);\n    throw error;\n  }\n};\nexport const getNutritionInfo = async foodId => {\n  try {\n    console.log('Getting nutrition info for food ID:', foodId);\n    const response = await api.get(`/food/ingredients/${foodId}/information`);\n    console.log('Nutrition response:', response.data);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching nutrition data:', error);\n    throw error;\n  }\n};\nexport const saveMeal = async mealData => {\n  try {\n    const response = await api.post('/meals', mealData);\n    return response.data;\n  } catch (error) {\n    console.error('Error in saveMeal:', error);\n    throw error;\n  }\n};\nexport const getDailyMeals = async date => {\n  try {\n    const response = await api.get('/meals/daily', {\n      params: {\n        date\n      }\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error in getDailyMeals:', error);\n    throw error;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","console","log","url","method","params","response","status","data","error","statusText","message","Promise","reject","searchFood","query","get","getNutritionInfo","foodId","saveMeal","mealData","post","getDailyMeals","date"],"sources":["C:/Users/dubey/OneDrive/Desktop/vegan meal prep/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:8081/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add request interceptor for logging\r\napi.interceptors.request.use((config) => {\r\n  console.log('Making request:', {\r\n    url: config.url,\r\n    method: config.method,\r\n    params: config.params,\r\n    headers: config.headers,\r\n  });\r\n  return config;\r\n});\r\n\r\n// Add response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('Received response:', {\r\n      status: response.status,\r\n      data: response.data,\r\n    });\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response) {\r\n      // Server responded with error status\r\n      console.error('API Error Response:', {\r\n        status: error.response.status,\r\n        statusText: error.response.statusText,\r\n        data: error.response.data,\r\n        headers: error.response.headers,\r\n      });\r\n    } else if (error.request) {\r\n      // Request made but no response received\r\n      console.error('Network Error - No response received:', error.request);\r\n    } else {\r\n      // Error in request setup\r\n      console.error('Request Setup Error:', error.message);\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const searchFood = async (query) => {\r\n  try {\r\n    console.log('Searching for food with query:', query);\r\n    const response = await api.get('/food/search', {\r\n      params: { query },\r\n    });\r\n    console.log('Search response:', response.data);\r\n    return response.data || [];\r\n  } catch (error) {\r\n    console.error('Error in searchFood:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getNutritionInfo = async (foodId) => {\r\n  try {\r\n    console.log('Getting nutrition info for food ID:', foodId);\r\n    const response = await api.get(`/food/ingredients/${foodId}/information`);\r\n    console.log('Nutrition response:', response.data);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error fetching nutrition data:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const saveMeal = async (mealData) => {\r\n  try {\r\n    const response = await api.post('/meals', mealData);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error in saveMeal:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const getDailyMeals = async (date) => {\r\n  try {\r\n    const response = await api.get('/meals/daily', {\r\n      params: { date },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Error in getDailyMeals:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}