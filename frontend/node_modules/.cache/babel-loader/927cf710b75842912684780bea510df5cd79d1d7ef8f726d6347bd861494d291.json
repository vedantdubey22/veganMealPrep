{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubey\\\\OneDrive\\\\Desktop\\\\vegan meal prep\\\\frontend\\\\src\\\\components\\\\GoogleLogin.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useGoogleLogin } from '@react-oauth/google';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleLogin = ({\n  onSuccess\n}) => {\n  _s();\n  const login = useGoogleLogin({\n    onSuccess: async response => {\n      try {\n        // Get user info from Google\n        const userInfo = await axios.get('https://www.googleapis.com/oauth2/v3/userinfo', {\n          headers: {\n            Authorization: `Bearer ${response.access_token}`\n          }\n        });\n\n        // Send to our backend\n        const backendResponse = await axios.post('http://localhost:5000/api/auth/google', {\n          email: userInfo.data.email,\n          name: userInfo.data.name,\n          picture: userInfo.data.picture,\n          googleId: userInfo.data.sub\n        });\n\n        // Store the token\n        localStorage.setItem('token', backendResponse.data.token);\n\n        // Call the success callback\n        if (onSuccess) {\n          onSuccess(backendResponse.data);\n        }\n      } catch (error) {\n        console.error('Error during Google login:', error);\n      }\n    },\n    flow: 'implicit'\n  });\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: () => login(),\n    className: \"bg-white text-gray-700 px-4 py-2 rounded-md shadow-sm flex items-center space-x-2 hover:bg-gray-50 transition-colors\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://www.google.com/favicon.ico\",\n      alt: \"Google\",\n      className: \"w-5 h-5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Sign in with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(GoogleLogin, \"zY/v83cBMrwD3I51qGaOiRFUBvU=\", false, function () {\n  return [useGoogleLogin];\n});\n_c = GoogleLogin;\nexport default GoogleLogin;\nvar _c;\n$RefreshReg$(_c, \"GoogleLogin\");","map":{"version":3,"names":["React","useGoogleLogin","axios","jsxDEV","_jsxDEV","GoogleLogin","onSuccess","_s","login","response","userInfo","get","headers","Authorization","access_token","backendResponse","post","email","data","name","picture","googleId","sub","localStorage","setItem","token","error","console","flow","onClick","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/dubey/OneDrive/Desktop/vegan meal prep/frontend/src/components/GoogleLogin.js"],"sourcesContent":["import React from 'react';\r\nimport { useGoogleLogin } from '@react-oauth/google';\r\nimport axios from 'axios';\r\n\r\nconst GoogleLogin = ({ onSuccess }) => {\r\n  const login = useGoogleLogin({\r\n    onSuccess: async (response) => {\r\n      try {\r\n        // Get user info from Google\r\n        const userInfo = await axios.get(\r\n          'https://www.googleapis.com/oauth2/v3/userinfo',\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${response.access_token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        // Send to our backend\r\n        const backendResponse = await axios.post('http://localhost:5000/api/auth/google', {\r\n          email: userInfo.data.email,\r\n          name: userInfo.data.name,\r\n          picture: userInfo.data.picture,\r\n          googleId: userInfo.data.sub,\r\n        });\r\n\r\n        // Store the token\r\n        localStorage.setItem('token', backendResponse.data.token);\r\n        \r\n        // Call the success callback\r\n        if (onSuccess) {\r\n          onSuccess(backendResponse.data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error during Google login:', error);\r\n      }\r\n    },\r\n    flow: 'implicit'\r\n  });\r\n\r\n  return (\r\n    <button\r\n      onClick={() => login()}\r\n      className=\"bg-white text-gray-700 px-4 py-2 rounded-md shadow-sm flex items-center space-x-2 hover:bg-gray-50 transition-colors\"\r\n    >\r\n      <img\r\n        src=\"https://www.google.com/favicon.ico\"\r\n        alt=\"Google\"\r\n        className=\"w-5 h-5\"\r\n      />\r\n      <span>Sign in with Google</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default GoogleLogin; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,QAAQ,qBAAqB;AACpD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAMC,KAAK,GAAGP,cAAc,CAAC;IAC3BK,SAAS,EAAE,MAAOG,QAAQ,IAAK;MAC7B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAC9B,+CAA+C,EAC/C;UACEC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUJ,QAAQ,CAACK,YAAY;UAChD;QACF,CACF,CAAC;;QAED;QACA,MAAMC,eAAe,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,uCAAuC,EAAE;UAChFC,KAAK,EAAEP,QAAQ,CAACQ,IAAI,CAACD,KAAK;UAC1BE,IAAI,EAAET,QAAQ,CAACQ,IAAI,CAACC,IAAI;UACxBC,OAAO,EAAEV,QAAQ,CAACQ,IAAI,CAACE,OAAO;UAC9BC,QAAQ,EAAEX,QAAQ,CAACQ,IAAI,CAACI;QAC1B,CAAC,CAAC;;QAEF;QACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAET,eAAe,CAACG,IAAI,CAACO,KAAK,CAAC;;QAEzD;QACA,IAAInB,SAAS,EAAE;UACbA,SAAS,CAACS,eAAe,CAACG,IAAI,CAAC;QACjC;MACF,CAAC,CAAC,OAAOQ,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD;IACF,CAAC;IACDE,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,oBACExB,OAAA;IACEyB,OAAO,EAAEA,CAAA,KAAMrB,KAAK,CAAC,CAAE;IACvBsB,SAAS,EAAC,sHAAsH;IAAAC,QAAA,gBAEhI3B,OAAA;MACE4B,GAAG,EAAC,oCAAoC;MACxCC,GAAG,EAAC,QAAQ;MACZH,SAAS,EAAC;IAAS;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACFjC,OAAA;MAAA2B,QAAA,EAAM;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEb,CAAC;AAAC9B,EAAA,CAjDIF,WAAW;EAAA,QACDJ,cAAc;AAAA;AAAAqC,EAAA,GADxBjC,WAAW;AAmDjB,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}